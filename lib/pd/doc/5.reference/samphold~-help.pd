#N canvas 430 114 535 529 12;
#X obj 74 472 snapshot~;
#X floatatom 74 497 5 0 0 0 - - -;
#X obj 83 446 metro 100;
#X obj 43 14 samphold~;
#X text 120 13 - sample and hold unit;
#X obj 74 387 samphold~;
#X text 37 47 The samphold~ object samples its left input whenever
its right input decreases in value (as a phasor~ does each period \,
for example.) Both inputs are audio signals., f 66;
#X obj 109 351 sig~;
#X obj 163 383 sig~;
#X floatatom 109 326 3 0 0 0 - - -;
#X floatatom 163 362 3 0 0 0 - - -;
#X msg 74 223 set 34;
#X msg 93 292 reset;
#X text 139 221 set output to a number;
#X text 147 326 sample signal;
#X text 206 360 control signal;
#X msg 82 255 reset 10;
#X text 161 253 reset previous value;
#X text 150 303 to force the next sample;
#X obj 83 414 loadbang;
#X text 318 462 updated for version 0.39;
#X text 161 267 for control inlet;
#X text 149 289 reset to default 1e+20;
#X text 38 100 The "set" message sets the output value (which continues
to be updated as normal afterward.) The "reset" message causes samphold~
to act as if the specified value were the most recent value of the
control input. Use this \, for example \, if you reset the incoming
phasor but don't want the jump reflected in the output. Plain "reset"
is equivalent to "reset infinity" which forces the next input to be
sampled., f 66;
#X msg 172 443 \; pd dsp 1;
#X connect 0 0 1 0;
#X connect 2 0 0 0;
#X connect 5 0 0 0;
#X connect 7 0 5 0;
#X connect 8 0 5 1;
#X connect 9 0 7 0;
#X connect 10 0 8 0;
#X connect 11 0 5 0;
#X connect 12 0 5 0;
#X connect 16 0 5 0;
#X connect 19 0 2 0;
#X connect 19 0 24 0;
